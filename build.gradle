buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.5.0'
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.4'
}

group = 'com.shuyixiao'
version = '1.0.2'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.groovy:groovy:4.0.14'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "com.google.code.gson:gson:2.11.0"
    implementation "org.jetbrains:annotations:24.1.0"
}

intellij {
    version = '2024.1.6'
    type = 'IU'
    plugins = ['java', 'org.intellij.groovy']
    updateSinceUntilBuild = false
}

tasks.withType(org.jetbrains.intellij.tasks.BuildSearchableOptionsTask) {
    enabled = false
}

ext {
    niagara_home = project.rootDir.absolutePath
}

tasks.register('minJar', Jar) {
    archiveClassifier.set('min')
    from sourceSets.main.output
}

tasks.register('proguard', proguard.gradle.ProGuardTask) {
    dependsOn minJar
    doFirst {
        ext {
            injar = tasks.named('minJar').get().archiveFile.get().asFile
            outJar = file("$buildDir/libs/${rootProject.name}-${version}-proguarded.jar")

            fileTree(dir: 'lib', include: '*.jar').files.each { jarFile ->
                libraryjars(jarFile)
            }

            libraryjars(System.getProperty("java.home") + "/jmods/java.base.jmod")
        }

        injars injar
        outjars outJar
        configuration 'sensetech.pro'
    }
    outputs.upToDateWhen { false }
}

// 运行插件配置
tasks.named("runIde") {
    // 取消下面的注释并填入您的百度翻译API密钥和APP_ID
    jvmArgs = [
        "-Xmx2g", 
        // 百度翻译API配置
//         "-Dbaidu.api.key=您的百度API密钥",
//         "-Dbaidu.app.id=您的百度APP_ID"
    ]
}

patchPluginXml {
    sinceBuild.set("241")
    untilBuild.set("241.*")
}

// 使用Java 17，兼容IntelliJ 2024.1.6
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()
}