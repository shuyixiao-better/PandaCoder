<idea-plugin>
    <id>com.shuyixiao.yixiaoPlugins</id>

    <name>PandaCoder</name>
    <vendor email="yixiaoshu88@163.com" url="https://www.shuyixiao.top">舒一笑不秃头</vendor>
    
    <description>PandaCoder 是一款专为中文开发人员设计的智能编程助手，集成了中文编程转换、Jenkins Pipeline支持、SpringBoot配置文件图标显示等多项强大功能。

## 🚀 核心功能

### 🎯 中文编程助手
• **智能中文转换**：支持中文转小驼峰、大驼峰、大写带下划线等多种命名格式
• **智能类创建**：支持中文输入快速创建Java类，自动转换为英文类名
• **类名前缀识别**：支持"Service:用户管理"格式，自动生成ServiceUserManagement等规范类名
• **多引擎翻译**：支持国内大模型（通义千问/文心一言/智谱AI）、Google Cloud Translation、百度翻译三级翻译引擎智能切换

### 🐳 Jenkins Pipeline 支持
• **智能语法高亮**：为Jenkins文件提供增强的语法高亮，11种鲜艳颜色
• **环境变量补全**：自动识别env.BUILD_NUMBER、env.WORKSPACE等环境变量
• **参数补全**：自动补全params.APP_NAME、params.DEPLOY_ENV等参数
• **文档提示**：提供完整的Jenkins Pipeline语法文档和示例
• **自定义图标**：Jenkins机器人图标，5层主题覆盖防护

### 🍃 SpringBoot 配置文件图标
• **技术栈识别**：自动识别SpringBoot配置文件中的技术栈（MySQL、Redis、Kafka等）
• **智能图标显示**：在编辑器左侧显示对应技术栈的彩色图标
• **多格式支持**：支持YAML和Properties格式的配置文件
• **优先级匹配**：特定技术栈图标优先于通用配置图标

### ⚙️ 高级功能
• **自定义翻译提示词**：支持自定义翻译prompt，适配不同技术领域
• **文件模板配置**：自定义Java文件注释模板
• **API配置验证**：实时验证各翻译引擎的API配置
• **智能错误处理**：优雅降级，确保功能可用性

## 🎨 技术特色

• **三级翻译引擎**：国内大模型 > Google翻译 > 百度翻译，确保翻译质量和可用性
• **智能优先级匹配**：避免图标冲突，显示最相关的技术栈图标
• **多语言支持**：支持中文、英文等多种编程语言环境
• **主题兼容**：自定义图标支持亮色和暗色主题

## 🎯 适用场景

• **中文开发者**：快速将中文思维转换为英文代码
• **Jenkins用户**：提升Pipeline开发效率和体验
• **SpringBoot项目**：直观识别配置文件中的技术栈
• **团队协作**：统一代码命名规范，提升代码质量

大幅提升中文开发人员的编程效率和开发体验，让编程更加高效、专业、愉悦！</description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.vcs</depends>
    <depends>org.intellij.groovy</depends>
    <depends>org.jetbrains.plugins.yaml</depends>
    <depends>com.intellij.properties</depends>

    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="com.shuyixiao.setting.PluginSettings"/>
        <applicationService serviceImplementation="com.shuyixiao.settings.ConversionSettings"/>
        <applicationConfigurable groupId="tools" displayName="PandaCoder" id="FileAnnotationInformationConfiguration"
                                instance="com.shuyixiao.setting.SettingConfigurable"/>
        <notificationGroup id="PandaCoder Notification Group" displayType="BALLOON" />
        
        <!-- Spring Boot 配置文件技术栈图标功能 -->
        <!-- YAML配置文件行标记提供器：为Spring Boot YAML配置文件显示技术栈图标 -->
        <codeInsight.lineMarkerProvider language="yaml" 
            implementationClass="com.shuyixiao.spring.boot.icon.SpringBootYamlLineMarkerProvider"/>
        
        <!-- Properties配置文件行标记提供器：为Spring Boot Properties配置文件显示技术栈图标 -->
        <codeInsight.lineMarkerProvider language="Properties" 
            implementationClass="com.shuyixiao.spring.boot.icon.SpringBootPropertiesLineMarkerProvider"/>
        
        <!-- Spring Boot图标提供器：确保Spring Boot图标显示 -->
        <iconProvider implementation="com.shuyixiao.spring.boot.icon.SpringBootIconProvider"/>
        
        <!-- Spring Boot YAML配置服务 -->
        <projectService serviceImplementation="com.shuyixiao.spring.boot.service.YamlConfigService"/>

        <!-- Spring Boot启动活动：初始化Spring Boot相关功能 -->
        <postStartupActivity implementation="com.shuyixiao.spring.boot.startup.YamlConfigStartupActivity"/>
        
        <!-- Jenkins Pipeline支持扩展 -->
        <!-- 文件类型工厂：注册Jenkins文件类型和特殊文件名 -->
        <fileType.fileTypeFactory implementation="com.shuyixiao.jenkins.JenkinsFileTypeFactory"/>
        
        <!-- 语法高亮器：为Jenkins文件提供增强的语法高亮 -->
        <lang.syntaxHighlighterFactory language="Groovy" 
            implementationClass="com.shuyixiao.jenkins.highlight.JenkinsSyntaxHighlighterFactory"/>
        
        <!-- 颜色设置：允许用户自定义Jenkins Pipeline的语法高亮颜色 -->
        <colorSettingsPage implementation="com.shuyixiao.jenkins.highlight.JenkinsColorSettingsPage"/>
        
        <!-- 环境变量和参数映射 -->
        <groovy.mapContentProvider implementation="com.shuyixiao.jenkins.provider.JenkinsMapContentProvider"/>
        
        <!-- 文档提供器 -->
        <lang.documentationProvider language="Groovy" 
            implementationClass="com.shuyixiao.jenkins.documentation.JenkinsDocumentationProvider"/>
        
        <!-- 服务 -->
        <projectService serviceImplementation="com.shuyixiao.jenkins.gdsl.JenkinsGdslService"/>
        
        <!-- 启动活动：确保文件类型正确注册 -->
        <postStartupActivity implementation="com.shuyixiao.jenkins.JenkinsFileTypeRegistrar"/>
        
        <!-- 图标提供器：确保Jenkins图标不被主题覆盖 -->
        <iconProvider implementation="com.shuyixiao.jenkins.icon.JenkinsIconProvider"/>
        
        <!-- 文件图标提供器：最高优先级的图标覆盖 -->
        <fileIconProvider implementation="com.shuyixiao.jenkins.icon.JenkinsFileIconDecorator"/>

        <!-- Bug记录器相关服务 -->
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.service.BugRecordService"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.service.ConsoleMonitoringService"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.service.BugAnalysisService"/>

        <!-- ES DSL 监控相关服务 -->
        <projectService serviceImplementation="com.shuyixiao.esdsl.service.EsDslRecordService"/>
        <projectService serviceImplementation="com.shuyixiao.esdsl.service.EsDslMonitoringService"/>

        <!-- SQL Monitor 监控相关服务 -->
        <projectService serviceImplementation="com.shuyixiao.sql.service.SqlRecordService"/>
        <projectService serviceImplementation="com.shuyixiao.sql.service.SqlMonitoringService"/>

        <!-- Git 统计相关服务 -->
        <projectService serviceImplementation="com.shuyixiao.gitstat.service.GitStatService"/>
        <projectService serviceImplementation="com.shuyixiao.gitstat.email.service.GitStatEmailService"/>
        <projectService serviceImplementation="com.shuyixiao.gitstat.email.config.GitStatEmailConfigState"/>

        <!-- 现有的启动活动 -->
        <postStartupActivity implementation="com.shuyixiao.spring.boot.startup.YamlConfigStartupActivity"/>

        <!-- Bug记录器启动活动 -->
        <postStartupActivity implementation="com.shuyixiao.bugrecorder.startup.BugRecorderStartupActivity"/>

        <!-- ES DSL 监控启动活动 -->
        <postStartupActivity implementation="com.shuyixiao.esdsl.startup.EsDslStartupActivity"/>

        <!-- SQL Monitor 启动活动 -->
        <postStartupActivity implementation="com.shuyixiao.sql.startup.SqlStartupActivity"/>

        <!-- Bug记录器工具窗口 -->
        <toolWindow id="Bug Recorder"
                    factoryClass="com.shuyixiao.bugrecorder.toolwindow.BugRecorderToolWindowFactory"
                    anchor="bottom"
                    icon="/icons/bug-recorder.svg"/>

        <!-- ES DSL 监控工具窗口 -->
        <toolWindow id="ES DSL Monitor"
                    factoryClass="com.shuyixiao.esdsl.toolwindow.EsDslToolWindowFactory"
                    anchor="bottom"
                    icon="/icons/elasticsearch.svg"/>

        <!-- SQL Monitor 工具窗口 -->
        <toolWindow id="SQL Monitor"
                    factoryClass="com.shuyixiao.sql.toolwindow.SqlToolWindowFactory"
                    anchor="bottom"
                    icon="/icons/mysql.svg"/>

        <!-- Git 统计工具窗口 -->
        <toolWindow id="Git Statistics"
                    factoryClass="com.shuyixiao.gitstat.toolwindow.GitStatToolWindowFactory"
                    anchor="right"
                    icon="/icons/git-stats.svg"/>

        <!-- AI 代码检测启动活动 -->
        <postStartupActivity implementation="com.shuyixiao.gitstat.ai.startup.AiCodeDetectionStartupActivity"/>
        
        <!-- Git 统计邮件启动活动：检查配置迁移 -->
        <postStartupActivity implementation="com.shuyixiao.gitstat.email.startup.GitStatEmailStartupActivity"/>

        <!-- AI 代码记录存储服务 -->
        <projectService serviceImplementation="com.shuyixiao.gitstat.ai.storage.AiCodeRecordStorage"/>

        <!-- AI 统计服务 -->
        <projectService serviceImplementation="com.shuyixiao.gitstat.service.GitAiStatService"/>

        <!-- AI 识别配置状态服务 -->
        <applicationService serviceImplementation="com.shuyixiao.gitstat.ai.config.GitStatAiConfigState"/>

        <!-- 更新设置状态服务 -->
        <applicationService serviceImplementation="com.shuyixiao.update.UpdateSettingsState"/>

        <!-- 版本更新检查启动活动 -->
        <postStartupActivity implementation="com.shuyixiao.update.UpdateCheckService"/>

        <!-- 项目级服务 -->
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.enhanced.EnhancedConsoleMonitoringService"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.enhanced.EnhancedExecutionListener"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.enhanced.EnhancedBugRecordManager"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.enhanced.EnhancedBugAnalysisService"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.enhanced.BugAggregationService"/>
        <projectService serviceImplementation="com.shuyixiao.bugrecorder.enhanced.ErrorPatternLearningService"/>
        
        <!-- 通知组定义 -->
        <notificationGroup id="PandaCoder.Notifications" displayType="BALLOON" key="notification.group.pandacoder"/>
        
        <!-- ==================== 活文档功能 (Living Doc) ==================== -->
        <!-- 活文档配置服务 -->
        <projectService serviceImplementation="com.shuyixiao.livingdoc.settings.LivingDocSettings"/>
        
        <!-- 活文档设置面板 -->
        <projectConfigurable groupId="tools" 
                           displayName="活文档 (Living Doc)" 
                           id="com.shuyixiao.livingdoc.settings.LivingDocConfigurable"
                           instance="com.shuyixiao.livingdoc.settings.LivingDocConfigurable"/>
        
        <!-- 活文档工具窗口 -->
        <toolWindow id="活文档"
                    factoryClass="com.shuyixiao.livingdoc.ui.LivingDocToolWindowFactory"
                    anchor="right"
                    icon="/icons/livingdoc.svg"/>
        
        <!-- 活文档通知组 -->
        <notificationGroup id="LivingDoc" displayType="BALLOON"/>
    </extensions>
    <actions>
        <action id="ReportMessage" class="com.shuyixiao.ReportMessage" text="关于PandaCoder"
                description="Show PandaCoder plugin information">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </action>

        <action id="ConvertToCamelCase" class="com.shuyixiao.ConvertToCamelCaseAction" text="中文转小驼峰" description="Convert selected Chinese text to camelCase naming format">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="ReportMessage"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt C"/>
        </action>

        <action id="ConvertToPascalCase" class="com.shuyixiao.ConvertToPascalCaseAction" text="中文转大驼峰" description="Convert selected Chinese text to PascalCase naming format">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="ConvertToCamelCase"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt P"/>
        </action>

        <action id="ConvertToUpperCase" class="com.shuyixiao.ConvertToUpperCaseAction" text="中文转大写带下划线" description="Convert selected Chinese text to UPPER_CASE naming format">
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="ConvertToPascalCase"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt U"/>
        </action>

        <!-- Feature to support Chinese input in native dialog -->
        <action id="ChineseFileCreation" class="com.shuyixiao.ChineseClassCreationAction" text="Smart Chinese Class" description="Create class with Chinese input automatically converted to English class name">
            <add-to-group group-id="NewGroup" anchor="first"/>
        </action>
        
        <!-- ==================== 活文档 Actions ==================== -->
        <group id="LivingDocGroup" text="活文档" description="Living Doc Actions" popup="true">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            
            <!-- 索引项目文档 -->
            <action id="LivingDoc.IndexProject" 
                    class="com.shuyixiao.livingdoc.action.IndexProjectAction"
                    text="索引项目文档"
                    description="分析项目代码并索引到向量数据库"
                    icon="/icons/livingdoc.svg">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift I"/>
            </action>
            
            <!-- 搜索文档 -->
            <action id="LivingDoc.Search" 
                    class="com.shuyixiao.livingdoc.action.SearchDocAction"
                    text="搜索文档"
                    description="打开活文档搜索窗口"
                    icon="/icons/search.svg">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift S"/>
            </action>
            
            <!-- 导出文档 -->
            <action id="LivingDoc.Export" 
                    class="com.shuyixiao.livingdoc.action.ExportDocAction"
                    text="导出文档"
                    description="导出项目文档到文件"
                    icon="/icons/export.svg">
            </action>
        </group>
    </actions>
</idea-plugin>
